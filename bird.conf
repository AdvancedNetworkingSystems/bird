/*
 *	This is an example configuration file.
 */

# Yet another comment

router id 62.168.0.1;

define xyzzy = 120+10;

function callme ( int arg1; int arg2 )
int local1;
int local2;
int i;
{
	print "Function callme called arguments " arg1 " and " arg2;
	i = arg2;

	case arg1 {
	2: print "dva"; print "jeste jednou dva";
	3 .. 5: print "tri az pet";
	else: print "neco jineho";
	}	
}

function startup () 
int i;
prefix px;
ip p;
{ 
	print "Testing filter language:";
	i = 4; 
	i = 1230 + i; 
	i = ( i + 0 );
	print "  arithmetics: 1234 = " i;
	printn "  if statements ";
	if i = 4 then { print "*** FAIL: if 0"; quitbird; } else printn ".";
	if 1234 = i then printn "."; else { print "*** FAIL: if 1 else"; }
	if 1 <= 1 then printn "."; else { print "*** FAIL: test 3"; }
	if 1234 < 1234 then { print "*** FAIL: test 4"; quitbird; } else print "ok";
	print "  data types; must be true: " 1.2.3.4 = 1.2.3.4 "," 1 ~ [1,2,3] "," 5 ~ [1..20] "," 2 ~ [ 1, 2, 3 ] "," 5 ~ [ 4 .. 7 ] "," 1.2.3.4 ~ [ 1.2.3.3..1.2.3.5 ] "," 1.2.3.4 ~ 1.2.3.4/8 "," 1.2.3.4/8 ~ 1.2.3.4/8 "," 1.2.3.4/8 ~ [ 1.2.3.4/8+ ] "," 1.2.3.4/16 ~ [ 1.2.3.4/8{ 15 , 16 } ] "," defined(1) "," defined(1.2.3.4);
	print "  data types: must be false: " 1 ~ [ 2, 3, 4 ] "," 5 ~ [ 2, 3, 4, 7..11 ] "," 1.2.3.4 ~ [ 1.2.3.3, 1.2.3.5 ] "," (1,2) > (2,2) "," (1,1) > (1,1) "," 1.2.3.4/8 ~ [ 1.2.3.4/8- ] "," 1.2.3.4/17 ~ [ 1.2.3.4/8{ 15 , 16 } ];

	px = 1.2.3.4/18;
	print "Testing prefixes: 1.2.3.4/18 = " px;
	p = 127.1.2.3;
	print "Testing mask : 127.0.0.0 = " p.mask(8);
	print "Testing pairs: (1,2) = " (1,2);
	print "Set of enums: " RTSDUMMY;

	print "What will this do? " [ 1, 2, 1, 1, 1, 3, 4, 1, 1, 1, 5 ];

	print "Testing functions...";
#	callme ( 1, 2 );
	callme ( 2, 2 );
	callme ( 2, 2 );
	callme ( 3, 2 );
	callme ( 4, 2 );
	callme ( 7, 2 );

	print "done";
	quitbird;
#	print "*** FAIL: this is unreachable"; 
}

filter testf 
int j; 
{ 
	print "Heya, filtering route to " rta.net.ip " prefixlen " rta.net.len;
	print "This route was from " rta.from;
	j = 7;
	j = 17;
	if rta.rip_metric > 15 then
		print "RIP Metric is more than infinity";
		
	accept;
}

protocol rip MyRIP_test {
	preference xyzzy;
	debug all;
	port 1520;
	period 5;
	garbagetime 30;
	interface "*" { mode broadcast; };
	export filter testf;
	honour neighbour;
	passwords { password "ahoj" from 0 to 10;
		password "nazdar" from 10;
	}
	authentication md5;
}

protocol device {
#	disabled;
#	interface "eth*", "ppp*";
}

#protocol kernel {
#	disabled;
#	learn;			# Learn all routes from the kernel
#	scan time 10;		# Scan kernel tables every 10 seconds
#}

protocol static {
#	disabled;
	route 0.0.0.0/0 via 62.168.0.13;
	route 62.168.0.0/25 reject;
#	route 10.0.0.0/8 reject;
#	route 10.1.1.0:255.255.255.0 via 62.168.0.3;
#	route 10.1.2.0:255.255.255.0 via 62.168.0.3;
#	route 10.1.3.0:255.255.255.0 via 62.168.0.4;
#	route 10.2.0.0/24 via "arc0";
}
